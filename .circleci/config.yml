# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

# Define a job to be invoked later in a workflow.
jobs:

  print_init:
    # Print Branch name
    docker:
      - image: circleci/node:13.8.0
    
    environment:
      FIRSTNAME: RUSSEL
      LASTNAME: MUSASA
    
    steps:
      - run:
          name: "Set my name and use"
          command: |
            echo Your name is: ${MY_NAME}
          environment:
            MY_NAME: Russel Musasa
      
      - run:
          name: "What your name?"
          command: echo Your name is ${FIRSTNAME} ${LASTNAME}

      - run:
          name: "What branch am I on?"
          command: |
            echo current branch name is: ${CIRCLE_BRANCH}
  
  print_hello:
    # Print Hello Job
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print hello"
          command: echo Hello

  print_world:
    # Print World Job
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print World"
          command: echo World
  
  save_hello_world_output:
    # Save Text into output file
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Save text into file"
          command: mkdir workspace && echo "text to output here" > workspace/output.txt
      - run: 
          name: "List workspace content"
          command: ls -lhtra workspace
      - persist_to_workspace:
          root: workspace
          paths:
            - output.txt

  print_output_file:
    # Print Hello World Job output
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: "Print File content"
          command: cd workspace && cat output.txt

# Invoke jobs via workflows
workflows:
  say-hello-workflow:
    jobs:
      - print_init
      - print_hello:
          requires:
            - print_init
      - print_world:
          requires:
            - print_hello
      - save_hello_world_output:
          requires:
            - print_hello
      - print_output_file:
          requires:
            - save_hello_world_output
